@if(userDetail is not null)
{
    <h1 class="text-white">@userDetail.UserName</h1>
}
<hr style="margin-bottom:50px;background-color:white;height:3px" />

@*@if(isMyProfile)
{
    <br />
    <input type="button" class="btn btn-success btn-sozluk" value="Change Details" @onclick="(() => showForm = !showForm)" />
}

@if(showForm)
{
    <br />
    <br />

    <EditForm Model="@userDetail" OnValidSubmit="@OnSaveClicked">
        <div class="form-row">
            <div class="col-4">
                <div class="input-group mb-2">
                    <div class="input-group-append col-5">
                        <div class="input-group-text">User Name</div>
                    </div>
                    <InputText @bind-Value="@userDetail.UserName" class="form-control" placeholder="Nick" />
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-4">
                <div class="input-group mb-2">
                    <div class="input-group-append col-5">
                        <div class="input-group-text">First Name</div>
                    </div>
                    <InputText @bind-Value="@userDetail.FirstName" class="form-control" placeholder="First Name" />
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-4">
                <div class="input-group mb-2">
                    <div class="input-group-append col-5">
                        <div class="input-group-text">Last Name</div>
                    </div>
                    <InputText @bind-Value="@userDetail.LastName" class="form-control" placeholder="Last Name" />
                </div>
            </div>
        </div>
        <div class="form-row">
            <div class="col-4">
                <div class="input-group mb-2">
                    <div class="input-group-append col-5">
                        <div class="input-group-text">Email</div>
                    </div>
                    <InputText @bind-Value="@userDetail.EmailAddress" class="form-control" placeholder="Email" />
                </div>
            </div>
        </div>
        <br />
        <button type="submit" class="form-control btn btn-success btn-sozluk w-auto">Save Changes</button>
        <br />
        <br />
        <input type="button" class="form-control btn btn-dark bg-gradient w-auto" value="Change Password"
           @onclick="(() => showChangePasswordSection = !showChangePasswordSection)" />
        <br />

        @if(showChangePasswordSection)
        {
            if(changePasswordErrorText != string.Empty)
            {
                <span class="text-danger">@changePasswordErrorText</span>
                <br />
            }

            <div class="form-row">
                <div class="col-4">
                    <div class="input-group mb-2">
                        <div class="input-group-append col-5">
                            <div class="input-group-text">Old Password</div>
                        </div>
                        <InputText type="password" @bind-Value="@oldPassword" class="form-control" placeholder="Old Password" />
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="col-4">
                    <div class="input-group mb-2">
                        <div class="input-group-append col-5">
                            <div class="input-group-text">New Password</div>
                        </div>
                        <InputText type="password" @bind-Value="@newPassword" class="form-control" placeholder="New Password" />
                    </div>
                </div>
            </div>
            <br />
            <input type="button" class="form-control btn btn-success btn-sozluk w-auto" value="Save Password"
           @onclick="@ChangePassword" />
        }
    </EditForm>
}*@

@code {
    [Parameter]
    public string UserName { get; set; }

    [Parameter]
    public Guid UserId { get; set; }

    //[Inject]
    //ILocalStorageService localStorageService { get; set; }

    [Inject]
    AuthenticationStateProvider authenticationStateProvider { get; set; }

    //[Inject]
    //NavigationManager navigationManager { get; set; }

    [Inject]
    IUserService userService { get; set; }

    private UserDetailViewModel userDetail = new();

    //private bool showForm;
    //private bool isMyProfile;
    //private bool showChangePasswordSection;
    //private string changePasswordErrorText;
    //private string oldPassword;
    //private string newPassword;
    //private string emailBeforeChange;

    protected override async Task OnInitializedAsync()
    {
        if(!string.IsNullOrEmpty(UserName))
        {
            userDetail = await userService.GetUserDetail(UserName);
        }
        else
        {
            if(UserId == Guid.Empty && string.IsNullOrEmpty(UserName))
            {
                UserId = await authenticationStateProvider.GetUserId();
            }

            userDetail = await userService.GetUserDetail(UserId);
        }

        //emailBeforeChange = userDetail.EmailAddress;

        //var myUserName = await localStorageService.GetUserName();
        //var myUserId = await localStorageService.GetUserId();

        //isMyProfile = userDetail.UserName == myUserName || userDetail.Id == myUserId;
    }

    //private async Task OnSaveClicked()
    //{
    //    UpdateUserCommand command = new UpdateUserCommand
    //        {
    //            EmailAddress = userDetail.EmailAddress,
    //            FirstName = userDetail.FirstName,
    //            Id = userDetail.Id,
    //            LastName = userDetail.LastName,
    //            UserName = userDetail.UserName
    //        };
    //    var succes = await userService.UpdateUser(command);

    //    if(emailBeforeChange != userDetail.EmailAddress)
    //    {
    //        navigationManager.NavigateTo("/logout");
    //    }

    //    if(succes)
    //    {
    //        showForm = false;
    //    }

    //}

    //private async Task ChangePassword()
    //{
    //    if(string.IsNullOrEmpty(oldPassword) || string.IsNullOrEmpty(newPassword))
    //    {
    //        changePasswordErrorText = "Please check old and new password";

    //        return;
    //    }

    //    try
    //    {
    //        var success = await userService.ChangeUserPassword(oldPassword, newPassword);

    //        if(success)
    //        {
    //            showChangePasswordSection = false;
    //        }
    //    }
    //    catch(DatabaseValidationException ex)
    //    {
    //        changePasswordErrorText = ex.Message;
    //    }
    //}
}
