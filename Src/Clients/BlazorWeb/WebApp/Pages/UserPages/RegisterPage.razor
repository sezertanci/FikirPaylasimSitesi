@page "/register"

<div class="login-container">
    <div class="row justify-content-center align-items-start h-100">
        <div class="login-form col-sm-4">
            <EditForm Model="@createUserCommand" OnValidSubmit="RegisterProcess">
                <DataAnnotationsValidator />

                @if(errorText != string.Empty)
                {
                    <span class="text-danger">@errorText</span>

                    <br />
                }

                <div class="form-group">
                    <input @bind-value="createUserCommand.FirstName" class="form-control" type="text" placeholder="First Name" />
                </div>
                <br />
                <div class="form-group">
                    <input @bind-value="createUserCommand.LastName" class="form-control" type="text" placeholder="Last Name" />
                </div>
                <br />
                <div class="form-group">
                    <input @bind-value="createUserCommand.UserName" class="form-control" type="text" placeholder="User Name" />
                </div>
                <br />
                <div class="form-group">
                    <input @bind-value="createUserCommand.EmailAddress" class="form-control" type="text" placeholder="Email Address" />
                </div>
                <br />
                <div class="form-group">
                    <input @bind-value="createUserCommand.PasswordStr" class="form-control" type="password" placeholder="Password" />
                </div>
                <br />
                <div class="form-group">
                    <button class="btn btn-success btn-sozluk">Register</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Inject]
    IIdentityService identityService { get; set; }

    [Inject]
    NavigationManager navigationManager { get; set; }

    private CreateUserCommand createUserCommand = new();

    private string errorText = "";

    public async Task RegisterProcess()
    {
        try
        {
            var result = await identityService.Register(createUserCommand);

            if(result)
            {
                errorText = "";
                navigationManager.NavigateTo("/login");
            }
            else
            {
                errorText = "Register failed with unknow reasons";
            }
        }
        catch(Exception ex)
        {
            errorText = ex.Message;
        }
    }
}
