@page "/entry/{id:guid}"

@if(entry is not null)
{
    <EntryViewerComponent Entry="@entry" />

    <AuthorizeView>
        <Authorized>
            <CreateEntryCommentComponent EntryId="@entry.Id" EntrySubject="@entry.Subject" OnClicked="@OnCommentCreate" />
        </Authorized>
    </AuthorizeView>
    <br />

    if(comments is not null)
    {
        foreach(var comment in comments.Results)
        {
            <EntryCommentViewerComponent EntryComment="@comment" />
        }
        <br />
        <br />

        <PaginationComponent TotalPage="@comments.PageInfo.TotalPageCount"
                     CurrentPage="@currentPage"
                     OnPageChanged="@OnPageChanged" />
    }
}

@code {
    [Parameter]
    public Guid id { get; set; }

    [Inject]
    IEntryService entryService { get; set; }

    private GetEntryDetailViewModel entry;

    private PagedViewModel<GetEntryCommentsViewModel> comments;

    private int currentPage = 1;

    protected override async Task OnParametersSetAsync()
    {
        entry = await entryService.GetEntryDetail(id);

        await RefreshComments(1);

        currentPage = comments.PageInfo.CurrentPage;
    }

    public async Task OnCommentCreate(CreateEntryCommentCommand command)
    {
        await entryService.CreateEntryComment(command);

        await RefreshComments(currentPage);
    }

    private async Task RefreshComments(int pageNumber)
    {
        comments = await entryService.GetEntryComments(entry.Id, pageNumber, 5);
    }

    public async Task OnPageChanged(int pageNumber)
    {
        currentPage = pageNumber;
        await RefreshComments(currentPage);
    }
}
